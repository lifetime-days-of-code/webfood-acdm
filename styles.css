body {
  font-family: "Open Sans", sans-serif;
  margin: 0;
  background-color: rgb(44, 41, 38);
}

a {
  text-decoration: none;
}

.main-header {
  /*?ðŸ’¡ typically trough this course we used padding to increase the height of the an elements. But we want to have fixed hight for this element ðŸ‘‡*/
  height: 80px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: rgb(29, 26, 24);
  /*?ðŸ’¡ make sure that the elements are not  sitting directly next to the left and right border of the header ðŸ‘‡*/
  padding: 0 20px;
}

.logo {
  font-size: 24px;
  font-weight: bold;
  color: rgb(238, 164, 80);
  text-transform: uppercase;
}

.main-header ul {
  list-style: none;
  display: flex;
  margin: 0;
  padding: 0;
}

.main-header li {
  margin: 0 16px;
}

.main-header nav a {
  color: rgb(185, 131, 31);
  font-size: 20px;
}

.main-header nav a:hover {
  color: rgb(228, 163, 44);
}

main h1 {
  text-align: center;
  color: rgb(238, 164, 80);
  font-size: 48px;
}

.latest-products {
  width: 80%;
  margin: 50px auto;
}

.latest-products ul {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
  /*?ðŸ’¡ removes the default padding and margin and helps center the element ðŸ‘‡*/
  margin: 0;
  padding: 0;
}
.food-item {
  background-color: rgb(228, 206, 182);
  border-radius: 6px;
  /*!ðŸ’¡ NOTE--1.0: this rule is needed because the images are overflowing their container and are overlapping the border radius for the top left and right corners in this case. ðŸ‘‡*/
  overflow: hidden;
}

.food-item img {
  height: 240px;
  width: 100%;
  /*?ðŸ’¡ to perfectly position the image in the predefined width and height dimensions that we've set */
  object-fit: cover;
}

.food-item-content {
  padding: 16px;
  text-align: center;
}

h2 {
  /*! NOTE--1.1: font-size: 100%; -> This means that the font size should be equal to 100% of the parent's font size.If there is no font-size set to the parent of the <h2> element then it takes the default font size from the browser.*/

  /*! NOTE--1.2: font-size: 2em; -> Works the same as the % value in font-size context. 1em = 100%, 2em = 200% etc.*/

  /*! NOTE--1.3: font-size: 2rem; -> the font size is always relative to the root element `<html>` font size. With no default value set for the root element, the size always is relative to the browsers settings of the user. */

  font-size: 2rem;
}

.btn {
  background-color: rgb(228, 157, 44);
  color: white;
  border-radius: 4px;
  padding: 8px 24px;
}

.btn:hover {
  background-color: rgb(221, 134, 34);
}
